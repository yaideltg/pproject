[build-system]
requires = ["setuptools", "wheel", "cython"]
build-backend = "setuptools.build_meta"

[project]
# Project requirements and dependencies
requires-python = ">= 3.8"
dependencies = [
    "termcolor>=2.0.0,<=2.4.0"
]

# Project general information
name = "pproject"
version = "0.0.1"
authors = [
    { name = "Yaidel Toledo", email = "contact@poview.org" }
]
description = "This is my first time packaging with Python."
readme = { file = "README.md", content-type = "text/markdown"}
# license = { text = "GPL3" }
classifiers = [
    "License :: GPLv3",
    "Programming Language :: Python"
]

[project.urls]
Homepage = "https://example.com"
Documentation = "https://readthedocs.org"
Repository = "https://github.com/me/spam.git"
"Bug Tracker" = "https://github.com/me/spam/issues"
Changelog = "https://github.com/me/spam/blob/master/CHANGELOG.md"

# Command line commands provided by the package
[project.gui-scripts]
harmony = "imppkg.harmony:main"

[tool.setuptools]
# By default, include-package-data is true in pyproject.toml, but anyways
include-package-data = true
# Definition of the extensions to compile when building, that it any C, Cython, Fortran, etc.
ext-modules = [
    { name = "imppkg.harmonic_mean", sources = ["src/imppkg/harmonic_mean.pyx"] }
]

# Define the folders and rules to search for the files to be packaged
[tool.setuptools.packages.find]
where = ["src"]  # list of folders that contain the packages (["."] by default)
include = ["*"]  # package names should match these glob patterns (["*"] by default)
exclude = ["test*"]  # exclude packages matching these glob patterns (empty by default)
namespaces = true  # to disable scanning PEP 420 namespaces (true by default)

# In addition to .py files, also include in the build the following files, which are needed
[tool.setuptools.package-data]
imppkg = ["*.json", "*.pyx"]

# PyTest Configuration
[tool.pytest.ini_options]
#minversion = "6.0"
addopts = "--strict-markers"
testpaths = [
    "test",
]


# PyTest Coverage.py Configuration
[tool.coverage.run]
branch = true
[tool.coverage.report]
show_missing = true
skip_covered = true
[tool.coverage.paths]
source = [
    "src/imppkg/",
    "*/site-packages/imppkg/",
]

# Configuration for tox
[tool.tox]
legacy_tox_ini = """
    [tox]
    isolated_build = True
    envlist =
            py312
            py311
            py310

    [testimports]
    deps =
         pytest
         pytest-cov
         pytest-randomly    

    [testenv]
    deps =
         {[testimports]deps}
    commands =
         pytest {posargs}

    [testenv:typecheck]
    deps =
         mypy
         pytest
         types-termcolor
    commands =
         mypy --ignore-missing-imports {posargs:src test}

    [testenv:format]
    skip_install = True
    deps =
         black
    commands =
         black {posargs:--check --diff src test}

    
    [testenv:lint]
    skip_install = True
    deps =
         flake8
         flake8-bugbear
    commands =
         flake8 {posargs:src test}
"""